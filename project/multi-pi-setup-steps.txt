Many-pi control via shell looping, TODO make this a CMS command

$ for i in pi@PI1_IP pi@PI2_IP pi@PI3_IP pi@PI4_IP pi@PI5_IP; do ssh $i COMMAND; done
  Alternatively add to ~/.ssh/config entries of the form:
	  host pi1
		hostname PI1_IP
		user pi
	And then you can type: for i in pi1 pi2 pi3 pi4 pi5; do ssh $i COMMAND; done

COMMANDs (include the quotes!):
'sudo timedatectl set-ntp false'
'sudo timedatectl set-timezone America/Indiana/Indianapolis'
'sudo timedatectl set-time "2019-12-18 14:20:52"'

On each pi individually SSH in and execute this command:
$ curl -sSl https://get.docker.com | sh
(this install script needs to be executed in a normal interactive SSH session or
  else it errors out)

Then these COMMANDs with the for loop again:
'echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list'
'sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 6A030B21BA07F4FB'
'sudo apt-get update'
'sudo apt-get -y dist-upgrade'
'sudo apt-get -y install kubelet kubeadm kubectl'
'sudo dphys-swapfile swapoff'
'sudo dphys-swapfile uninstall'
'sudo update-rc.d dphys-swapfile remove'
'sudo apt -y purge dphys-swapfile'
'sudo reboot'


On master node only, initialize the k8s cluster (do this manually):
$ sudo kubeadm init
$ mkdir -p /home/pi/.kube
$ sudo cp -i /etc/kubernetes/admin.conf /home/pi/.kube/config
$ sudo chown 1000:1000 /home/pi/.kube/config


On all other nodes, join the master node
  (this command is the last output of the `kubeadm init` command)
  (this can be done with a loop as before, but exclude the master node IP):
$ sudo kubeadm join master-public-IP:6443 --token abcdef.abcdef12345abcde --discovery-token-ca-cert-hash sha256:abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwxyz01
